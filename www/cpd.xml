<?xml version="1.0" encoding="UTF-8"?>
<pmd-cpd>
<duplication lines="75" tokens="361">
<file line="721" path="E:\Prog\eclipseData\workspace3.3\jawr-core-3.x-dev\src\main\java\net\jawr\web\taglib\el\ELImageInputTag.java"/>
<file line="1135" path="E:\Prog\eclipseData\workspace3.3\jawr-core-3.x-dev\src\main\java\net\jawr\web\taglib\el\ELImgHtmlTag.java"/>
<codefragment>
<![CDATA[
            setOndblclick(string);
        }

        if ((string =
                EvalHelper.evalString("onkeydown", getOnkeydownExpr(), this,
                    pageContext)) != null) {
            setOnkeydown(string);
        }

        if ((string =
                EvalHelper.evalString("onkeypress", getOnkeypressExpr(), this,
                    pageContext)) != null) {
            setOnkeypress(string);
        }

        if ((string =
                EvalHelper.evalString("onkeyup", getOnkeyupExpr(), this,
                    pageContext)) != null) {
            setOnkeyup(string);
        }

        if ((string =
                EvalHelper.evalString("onmousedown", getOnmousedownExpr(),
                    this, pageContext)) != null) {
            setOnmousedown(string);
        }

        if ((string =
                EvalHelper.evalString("onmousemove", getOnmousemoveExpr(),
                    this, pageContext)) != null) {
            setOnmousemove(string);
        }

        if ((string =
                EvalHelper.evalString("onmouseout", getOnmouseoutExpr(), this,
                    pageContext)) != null) {
            setOnmouseout(string);
        }

        if ((string =
                EvalHelper.evalString("onmouseover", getOnmouseoverExpr(),
                    this, pageContext)) != null) {
            setOnmouseover(string);
        }

        if ((string =
                EvalHelper.evalString("onmouseup", getOnmouseupExpr(), this,
                    pageContext)) != null) {
            setOnmouseup(string);
        }

        if ((string =
                EvalHelper.evalString("src", getSrcExpr(), this, pageContext)) != null) {
            setSrc(string);
        }

        if ((string =
                EvalHelper.evalString("style", getStyleExpr(), this, pageContext)) != null) {
            setStyle(string);
        }

        if ((string =
                EvalHelper.evalString("styleClass", getStyleClassExpr(), this,
                    pageContext)) != null) {
            setStyleClass(string);
        }

        if ((string =
                EvalHelper.evalString("styleId", getStyleIdExpr(), this,
                    pageContext)) != null) {
            setStyleId(string);
        }

        if ((string =
                EvalHelper.evalString("title", getTitleExpr(), this, pageContext)) != null) {
]]>
</codefragment>
</duplication>
<duplication lines="25" tokens="121">
<file line="655" path="E:\Prog\eclipseData\workspace3.3\jawr-core-3.x-dev\src\main\java\net\jawr\web\taglib\el\ELImageInputTag.java"/>
<file line="1068" path="E:\Prog\eclipseData\workspace3.3\jawr-core-3.x-dev\src\main\java\net\jawr\web\taglib\el\ELImgHtmlTag.java"/>
<codefragment>
<![CDATA[
        String string = null;

        if ((string =
                EvalHelper.evalString("align", getAlignExpr(), this, pageContext)) != null) {
            setAlign(string);
        }

        if ((string =
                EvalHelper.evalString("alt", getAltExpr(), this, pageContext)) != null) {
            setAlt(string);
        }

        if ((string =
                EvalHelper.evalString("border", getBorderExpr(), this,
                    pageContext)) != null) {
            setBorder(string);
        }

        if ((string =
        		EvalHelper.evalString("dir", getDirExpr(), this,
        			pageContext)) != null) {
        	setDir(string);
        }
        
        if ((string =
]]>
</codefragment>
</duplication>
<duplication lines="71" tokens="115">
<file line="480" path="E:\Prog\eclipseData\workspace3.3\jawr-core-3.x-dev\src\main\java\net\jawr\web\taglib\el\ELImageInputTag.java"/>
<file line="780" path="E:\Prog\eclipseData\workspace3.3\jawr-core-3.x-dev\src\main\java\net\jawr\web\taglib\el\ELImgHtmlTag.java"/>
<codefragment>
<![CDATA[
    }

    /**
     * Setter method for "onkeydown" tag attribute. (Mapping set in associated
     * BeanInfo class.)
     */
    public void setOnkeydownExpr(String onkeydownExpr) {
        this.onkeydownExpr = onkeydownExpr;
    }

    /**
     * Setter method for "onkeypress" tag attribute. (Mapping set in
     * associated BeanInfo class.)
     */
    public void setOnkeypressExpr(String onkeypressExpr) {
        this.onkeypressExpr = onkeypressExpr;
    }

    /**
     * Setter method for "onkeyup" tag attribute. (Mapping set in associated
     * BeanInfo class.)
     */
    public void setOnkeyupExpr(String onkeyupExpr) {
        this.onkeyupExpr = onkeyupExpr;
    }

    /**
     * Setter method for "onmousedown" tag attribute. (Mapping set in
     * associated BeanInfo class.)
     */
    public void setOnmousedownExpr(String onmousedownExpr) {
        this.onmousedownExpr = onmousedownExpr;
    }

    /**
     * Setter method for "onmousemove" tag attribute. (Mapping set in
     * associated BeanInfo class.)
     */
    public void setOnmousemoveExpr(String onmousemoveExpr) {
        this.onmousemoveExpr = onmousemoveExpr;
    }

    /**
     * Setter method for "onmouseout" tag attribute. (Mapping set in
     * associated BeanInfo class.)
     */
    public void setOnmouseoutExpr(String onmouseoutExpr) {
        this.onmouseoutExpr = onmouseoutExpr;
    }

    /**
     * Setter method for "onmouseover" tag attribute. (Mapping set in
     * associated BeanInfo class.)
     */
    public void setOnmouseoverExpr(String onmouseoverExpr) {
        this.onmouseoverExpr = onmouseoverExpr;
    }

    /**
     * Setter method for "onmouseup" tag attribute. (Mapping set in associated
     * BeanInfo class.)
     */
    public void setOnmouseupExpr(String onmouseupExpr) {
        this.onmouseupExpr = onmouseupExpr;
    }

    /**
     * Setter method for "paramId" tag attribute. (Mapping set in associated
     * BeanInfo class.)
     */
    public void setParamIdExpr(String paramIdExpr) {
]]>
</codefragment>
</duplication>
<duplication lines="18" tokens="111">
<file line="98" path="E:\Prog\eclipseData\workspace3.3\jawr-core-3.x-dev\src\main\java\net\jawr\web\resource\bundle\factory\util\ClassLoaderResourceUtils.java"/>
<file line="162" path="E:\Prog\eclipseData\workspace3.3\jawr-core-3.x-dev\src\main\java\net\jawr\web\resource\bundle\factory\util\ClassLoaderResourceUtils.java"/>
<codefragment>
<![CDATA[
			url = Thread.currentThread().getContextClassLoader().getResource(resourcePath);
			
			// Last chance, hack in the classloader
			if(null == url) {
				ClassLoader threadClassLoader = Thread.currentThread().getContextClassLoader();
				try {
					 Thread.currentThread().setContextClassLoader(source.getClass().getClassLoader());
					 if(Thread.currentThread().getContextClassLoader() != null){
						 url = Thread.currentThread().getContextClassLoader().getResource(resourcePath);
					 }
				}
				finally {
					 Thread.currentThread().setContextClassLoader(threadClassLoader);
				}
				
			}
			if(null == url){
				throw new ResourceNotFoundException( resourcePath + " could not be found. ");
]]>
</codefragment>
</duplication>
<duplication lines="43" tokens="105">
<file line="487" path="E:\Prog\eclipseData\workspace3.3\jawr-core-3.x-dev\src\main\java\net\jawr\web\taglib\AbstractImageTag.java"/>
<file line="115" path="E:\Prog\eclipseData\workspace3.3\jawr-core-3.x-dev\src\main\java\net\jawr\web\taglib\jsf\AbstractHtmlImageTag.java"/>
<codefragment>
<![CDATA[
		prepareAttribute(handlers, "onkeypress", getAttribute("onkeypress"));
	}

	/**
	 * Prepares an attribute if the value is not null, appending it to the the given StringBuffer.
	 * 
	 * @param handlers The StringBuffer that output will be appended to.
	 */
	protected void prepareAttribute(StringBuffer handlers, String name,
			Object value) {
		if (value != null) {
			handlers.append(" ");
			handlers.append(name);
			handlers.append("=\"");
			handlers.append(value);
			handlers.append("\"");
		}
	}

	/**
	 * Prepares an attribute if the value is not null, appending it to the the given StringBuffer.
	 * 
	 * @param handlers The StringBuffer that output will be appended to.
	 */
	protected void prepareAttribute(StringBuffer handlers, String name,
			boolean value) {

		handlers.append(" ");
		handlers.append(name);
		handlers.append("=\"");
		handlers.append(value);
		handlers.append("\"");

	}

	/**
	 * Prepare the image URL
	 * 
	 * @param context the faces context
	 * @param results the result
	 * @throws IOException if an exception occurs
	 */
	protected void prepareImageUrl(FacesContext context, StringBuffer results)
]]>
</codefragment>
</duplication>
</pmd-cpd>